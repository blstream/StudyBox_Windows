<UserControl
    x:Class="StudyBox.UserControls.MenuControlView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:StudyBox.UserControls"
    xmlns:converters="using:StudyBox.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    DataContext="{Binding Source={StaticResource Locator}, Path=MenuViewModel}"
    >
    <UserControl.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:NegativeBooleanToVisibilityConverter x:Key="NegativeBooleanToVisibilityConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="8*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border x:Name="TitleBorder"
                    Grid.ColumnSpan="3" 
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Top" 
                    Background="{StaticResource DarkBlue}" 
                    Padding="0,0" 
                    MinHeight="50" 
                    MaxHeight="60"
                    Margin="0"
                    >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition  Width="2*"/>
                        <ColumnDefinition />
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Padding="0" 
                            FontSize="12"
                            Foreground="{StaticResource Grey}" 
                            Background="{StaticResource DarkBlue}"
                            Margin="10,9,0,9"
                            Command="{Binding OpenMenuCommand}"
                            MaxWidth="32" MaxHeight="32">
                        <Button.Content>
                            <Image Source="ms-appx:///Assets/Menu-64.png" Stretch="Fill" Margin="0"/>
                        </Button.Content>
                    </Button>
                    <TextBlock
                            Grid.Column="1"
                            Grid.ColumnSpan="3"
                            FontSize="18" 
                            FontStretch="UltraExpanded" 
                            Foreground="{StaticResource Grey}" 
                            FontFamily="{StaticResource LatoBlackFontFamily}"
                            Text="{Binding TitleBar, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                    <AutoSuggestBox x:Name="SearchBox"
                                    Style="{StaticResource AutoSuggestBoxStyle}" 
                                    Grid.Row="0" 
                                    VerticalAlignment="Stretch" 
                                    BorderBrush="{StaticResource Graphite}" 
                                    Foreground="{StaticResource Graphite}" 
                                    Margin="0.333,1,2,1" QueryIcon="Find"
                                    Opacity="{Binding SearchOpacity}"
                                    IsHitTestVisible="{Binding IsSearchVisible}"
                                    Text ="{Binding SearchingContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    PlaceholderText="{Binding SearchDecks}"
                                    >
                        <i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="LostFocus">
                                <core:InvokeCommandAction Command="{Binding LostFocusCommand}" />
                            </core:EventTriggerBehavior>
                            <core:EventTriggerBehavior EventName="QuerySubmitted">
                                <core:InvokeCommandAction Command="{Binding DoSearchCommand}" />
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                    </AutoSuggestBox>

                    <Button x:Name="MenuSearchButton"
                            Grid.Column="4" 
                            HorizontalAlignment="Right" 
                            VerticalAlignment="Center"
                            Padding="0" FontSize="12"
                            Foreground="{StaticResource Grey}" 
                            Background="{StaticResource DarkBlue}"
                            Margin="0,13,10,13"
                            MaxWidth="32" 
                            MaxHeight="32"
                            BorderThickness="0"
                            Command="{Binding ShowSearchPanelCommand}"
                            Click="SearchButton_Click"
                            Visibility="{Binding SearchVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"
                            >
                        <Button.Content>
                            <SymbolIcon Symbol="Find"/>
                        </Button.Content>
                    </Button>

                    <Button x:Uid="MenuSaveButton"
                            Grid.Column="4" 
                            Visibility="{Binding SaveButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"
                            HorizontalAlignment="Right" 
                            VerticalAlignment="Center"
                            Padding="0" FontSize="12"
                            Foreground="{StaticResource Grey}" 
                            Background="{StaticResource DarkBlue}"
                            Margin="0,23,9.999,23"
                            MaxWidth="50" 
                            MaxHeight="32"
                            />

                </Grid>
            </Border>
            <SplitView x:Name="MenuBar" Grid.Column="0" Grid.Row="1"
                           DisplayMode="CompactInline" 
                           IsPaneOpen="{Binding Path=IsPaneOpen, UpdateSourceTrigger=PropertyChanged}"
                           CompactPaneLength="0"
                           OpenPaneLength="200"
                           VerticalAlignment="Stretch"
                           >
                <SplitView.Pane>
                    <StackPanel Background="{StaticResource Graphite}" Opacity="0.8">
                        <Border BorderBrush="{StaticResource DarkBlue}" BorderThickness="5" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,10,0,0">
                            <Image  Width="80" Height="80" Source="{Binding Gravatar}" />
                        </Border>
                        <TextBlock FontFamily="{StaticResource LatoRegularFontFamily}" Foreground="{StaticResource Grey}" Text="{Binding Email}" 
                                   HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center"
                                   Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <Button x:Uid="GoToUserDecksList" Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"
                                Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"
                                >
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding GoToUsersDecksCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                        <Button x:Uid="GoToDecksList" Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"
                                Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"
                                >
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding GoToDecksCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>

                        <Button x:Uid="FavouriteDecks" Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"
                                Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding FavouriteDecksCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>

                        <Button x:Uid="GoToAddDeck" Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding GoToAddDeckCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>

                        <Button x:Uid="GoToStatistics" Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding GoToStatisticsCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                        <Button x:Uid="TestRandomDeckButton" Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding TestRandomDeckCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                        <Button x:Uid="Settings" Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"
                                Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding SettingsCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                        <Button x:Uid="LogoutMenuButton" 
                                    Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"  
                                    Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding LogoutCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                        <Button x:Uid="LoginMenuButton" 
                                    Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"  
                                    Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource NegativeBooleanToVisibilityConverter}}">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding LoginCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                        <Button x:Uid="AboutBtn" 
                                    Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"  
                                    >
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding GoToAboutCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                    </StackPanel>
                </SplitView.Pane>
            </SplitView>
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="Phone">
                <VisualState x:Name="WidePhoneState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SearchBox.(Grid.Column)" Value="1"/>
                        <Setter Target="SearchBox.(Grid.ColumnSpan)" Value="4"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="NarrowPhoneState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SearchBox.(Grid.Column)" Value="1"/>
                        <Setter Target="SearchBox.(Grid.ColumnSpan)" Value="4"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="WideTabletState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SearchBox.(Grid.Column)" Value="3"/>
                        <Setter Target="SearchBox.(Grid.ColumnSpan)" Value="2"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1024"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SearchBox.(Grid.Column)" Value="3"/>
                        <Setter Target="SearchBox.(Grid.ColumnSpan)" Value="2"/>
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</UserControl>
