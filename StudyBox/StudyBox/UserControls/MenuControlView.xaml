<UserControl
    x:Class="StudyBox.UserControls.MenuControlView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:StudyBox.UserControls"
    xmlns:converters="using:StudyBox.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    DataContext="{Binding Source={StaticResource Locator}, Path=MenuViewModel}"
    >
    <UserControl.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:NegativeBooleanToVisibilityConverter x:Key="NegativeBooleanToVisibilityConverter"/>
    </UserControl.Resources>
    
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="8*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border x:Name="TitleBorder"
                    Grid.ColumnSpan="3" 
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Top" 
                    Background="{StaticResource DarkBlue}" 
                    Padding="0,0" 
                    MinHeight="50" 
                    MaxHeight="60"
                    Margin="0"
                    >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  Width="*"/>
                        <ColumnDefinition  Width="4*"/>
                        <ColumnDefinition  Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Padding="0" 
                            FontSize="12"
                            Foreground="{StaticResource Grey}" 
                            Background="{StaticResource DarkBlue}"
                            Margin="10,0,0,0"
                            Command="{Binding OpenMenuCommand}"
                            MaxWidth="32" MaxHeight="32">
                        <Button.Content>
                            <Image Source="ms-appx:///Assets/Menu-64.png" Stretch="Fill" Margin="0"/>
                        </Button.Content>
                    </Button>
                    <TextBlock
                            Grid.Column="1"
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Center" 
                            FontSize="18" 
                            FontStretch="UltraExpanded" 
                            Foreground="{StaticResource Grey}" 
                            FontFamily="{StaticResource LatoBlackFontFamily}"
                            Text="{Binding TitleBar, UpdateSourceTrigger=PropertyChanged}"
                        />

                    <Button x:Uid="MenuSearchButton"
                            Grid.Column="2" 
                            Visibility="{Binding SearchButtonVisibility,Converter={StaticResource BooleanToVisibilityConverter}}"
                            HorizontalAlignment="Right" 
                            VerticalAlignment="Center"
                            Padding="0" FontSize="12"
                            Foreground="{StaticResource Grey}" 
                            Background="{StaticResource DarkBlue}"
                            Margin="0,0,10,0"
                            MaxWidth="32" 
                            MaxHeight="32"
                            Command="{Binding ShowSearchPanelCommand}"
                            >
                        <Button.Content>
                            <Image Source="ms-appx:///Assets/Search-64.png" Stretch="Fill" Margin="0"/>
                        </Button.Content>
                    </Button>
                    
                    <Button x:Uid="MenuSaveButton"
                            Grid.Column="2" 
                            Visibility="{Binding SaveButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"
                            HorizontalAlignment="Right" 
                            VerticalAlignment="Center"
                            Padding="0" FontSize="12"
                            Foreground="{StaticResource Grey}" 
                            Background="{StaticResource DarkBlue}"
                            Margin="0,0,10,0"
                            MaxWidth="50" 
                            MaxHeight="32"
                            />
                    <Button x:Uid="ExitMenuButton"
                            Grid.Column="2" 
                            Visibility="{Binding ExitButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"
                            HorizontalAlignment="Right" 
                            VerticalAlignment="Center"
                            Padding="0" FontSize="12"
                            Foreground="{StaticResource Grey}" 
                            Background="{StaticResource DarkBlue}"
                            Margin="0,0,10,0"
                            MaxWidth="32" 
                            MaxHeight="32"
                            Command="{Binding CancelSearchingCommand}"
                            >
                        <Button.Content>
                            <Image Source="ms-appx:///Assets/Delete-64.png" Stretch="Fill" Margin="0"/>
                        </Button.Content>
                   </Button>

                </Grid>
            </Border>
            <SplitView x:Name="MenuBar" Grid.Column="0" Grid.Row="1"
                           DisplayMode="CompactInline" 
                           IsPaneOpen="{Binding Path=IsPaneOpen, UpdateSourceTrigger=PropertyChanged}"
                           CompactPaneLength="0"
                           OpenPaneLength="200"
                           VerticalAlignment="Stretch"
                           >
                <SplitView.Pane>
                    <StackPanel Background="{StaticResource Graphite}" Opacity="0.8">
                        <Button x:Uid="GoToUserDecksList" Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"
                                Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"
                                >
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding GoToUsersDecksCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                        <Button x:Uid="GoToDecksList" Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"
                                Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"
                                >
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding GoToDecksCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                        <Button x:Uid="GoToAddDeck" Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"
                                Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"
                                >
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding GoToAddDeckCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                        
                        <Button x:Uid="NewDeckFromFile" Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"
                                Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding NewDeckFromFileCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>

                        <Button x:Uid="GoToStatistics" Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"
                                Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"
                                >
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding GoToStatisticsCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                        <Button x:Uid="Logout" 
                                    Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"  
                                    Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding LogoutCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                        <Button x:Uid="TestRandomDeckButton" Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding TestRandomDeckCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                        <Button x:Uid="LogoutMenuButton" 
                                    Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"  
                                    Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding LogoutCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                        <Button x:Uid="LoginMenuButton" 
                                    Foreground="{StaticResource Grey}" Background="Transparent" HorizontalAlignment="Left"  
                                    Visibility="{Binding LogoutButtonVisibility, Converter={StaticResource NegativeBooleanToVisibilityConverter}}">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding LoginCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                    </StackPanel>
                </SplitView.Pane>
            </SplitView>

            <StackPanel x:Name="Searching"
                       Grid.Row="1"
                       Visibility="{Binding IsSearchOpen, Converter={StaticResource BooleanToVisibilityConverter}}"
                       MaxHeight="40"
                       VerticalAlignment="Top"
                       Grid.ColumnSpan="10"
                       >
                <Grid Background="{StaticResource Graphite}">
                   <Grid.ColumnDefinitions>
                       <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" 
                                Margin="5,3,5,10" 
                                 Background="{StaticResource Grey}" 
                                 Padding="5"
                                 MaxHeight="30"
                                 Text="{Binding SearchingContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 />
                    <Button Grid.Column="1" 
                                Margin="5,3,5,10"
                                Padding="0" 
                                VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch"
                                Background="{StaticResource DarkBlue}"
                                MaxHeight="30"
                                Command="{Binding DoSearchCommand}" 
                                IsEnabled="{Binding SearchButtonEnabled}"
                                >
                        <Button.Content>
                            <Image Source="ms-appx:///Assets/Search-64.png" Stretch="Fill" Margin="0" MaxHeight="24" MaxWidth="24"/>
                        </Button.Content>
                    </Button>
                </Grid>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
