<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbsenceUserInDatabase" xml:space="preserve">
    <value>Absence user in database</value>
  </data>
  <data name="AccessDenied" xml:space="preserve">
    <value>No Internet Access.</value>
  </data>
  <data name="Cancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Congrats" xml:space="preserve">
    <value>Congrats!</value>
  </data>
  <data name="CreateAccount.Text" xml:space="preserve">
    <value>Create new account</value>
  </data>
  <data name="DecksListTitleText.Text" xml:space="preserve">
    <value>StudyBox</value>
  </data>
  <data name="Email.PlaceholderText" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="EmailError.Text" xml:space="preserve">
    <value>E-mail is not valid</value>
  </data>
  <data name="FillAllFields" xml:space="preserve">
    <value>Fill all fields!</value>
  </data>
  <data name="Hint" xml:space="preserve">
    <value>HINT</value>
  </data>
  <data name="ImproveResults" xml:space="preserve">
    <value>IMPROVE YOUR RESULTS</value>
  </data>
  <data name="LoadingFlashcards.Text" xml:space="preserve">
    <value>Flashcards are loading...</value>
  </data>
  <data name="Login.Text" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginMenuButton.Content" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LogoutMenuButton.Content" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="MenuEditButton.Content" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="MenuSaveButton.Content" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="MyDecks.Text" xml:space="preserve">
    <value>MY DECKS</value>
  </data>
  <data name="NoInternetConnection" xml:space="preserve">
    <value>No Internet Connection.</value>
  </data>
  <data name="NotBad" xml:space="preserve">
    <value>Not bad!</value>
  </data>
  <data name="Password.PlaceholderText" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordCannotHaveWhitespaces" xml:space="preserve">
    <value>Password cannot contain any whitespaces!</value>
  </data>
  <data name="PasswordError.Text" xml:space="preserve">
    <value>Password is not valid</value>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>Password is too short!</value>
  </data>
  <data name="Register.Text" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegistrationFailed" xml:space="preserve">
    <value>Registration failed!</value>
  </data>
  <data name="RepeatPassword.PlaceholderText" xml:space="preserve">
    <value>Repeat password</value>
  </data>
  <data name="RepeatPasswordError.Text" xml:space="preserve">
    <value>Passwords are not equal!</value>
  </data>
  <data name="SearchMessage.Text" xml:space="preserve">
    <value>There are no decks with suitable search conditions</value>
  </data>
  <data name="RepeatTest" xml:space="preserve">
    <value>REPEAT TEST</value>
  </data>
  <data name="StudyBox" xml:space="preserve">
    <value>StudyBox</value>
  </data>
  <data name="TryAgain" xml:space="preserve">
    <value>Try again...</value>
  </data>
  <data name="WorstTest.Text" xml:space="preserve">
    <value>TEST OF THE WORST</value>
  </data>
  <data name="YourScore.Text" xml:space="preserve">
    <value>Your score</value>
  </data>
  <data name="NoFlashcards.Text" xml:space="preserve">
    <value>There are no available flashcards in this deck!</value>
  </data>
  <data name="OutOf" xml:space="preserve">
    <value>out of</value>
  </data>
  <data name="TestRandomDeckButton.Content" xml:space="preserve">
    <value>Discover new deck</value>
  </data>
  <data name="ServerConnectionError" xml:space="preserve">
    <value>Server connection error.</value>
  </data>
  <data name="ContinueWithoutLogin.Text" xml:space="preserve">
    <value>Continue without login</value>
  </data>
  <data name="GoToDecksList.Content" xml:space="preserve">
    <value>Back to my decks</value>
  </data>
  <data name="ChooseLearning.Text" xml:space="preserve">
    <value>Learning</value>
  </data>
  <data name="ChooseLearningOrTest.Text" xml:space="preserve">
    <value>What do you want to do?</value>
  </data>
  <data name="ChooseTest.Text" xml:space="preserve">
    <value>Exam</value>
  </data>
  <data name="DontRepeatLearning.Text" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="FinishLearningMessage.Text" xml:space="preserve">
    <value>That's all the flashcards within the deck. Would you like to start again?</value>
  </data>
  <data name="RepeatLearning.Text" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ShowAnswerMessage.Text" xml:space="preserve">
    <value>Show answer</value>
  </data>
  <data name="BadAnswersCount.Text" xml:space="preserve">
    <value>Count of bad answers:</value>
    <comment>statistics page</comment>
  </data>
  <data name="CountOfDecks.Text" xml:space="preserve">
    <value>Count of tested decks:</value>
    <comment>statistics page</comment>
  </data>
  <data name="GoodAnswersCount.Text" xml:space="preserve">
    <value>Count of correct answers:</value>
    <comment>statistics page</comment>
  </data>
  <data name="GoToStatistics.Content" xml:space="preserve">
    <value>Statistics</value>
    <comment>menu control - hamburger</comment>
  </data>
  <data name="TestsCount.Text" xml:space="preserve">
    <value>Count of tests:</value>
    <comment>statistics page</comment>
  </data>
  <data name="Question" xml:space="preserve">
    <value>QUESTION</value>
  </data>
  <data name="AddFlashcardsFromFile" xml:space="preserve">
    <value>Add flashcards to deck from file</value>
  </data>
  <data name="CreateNewDeckFromFile" xml:space="preserve">
    <value>Create new deck from file</value>
  </data>
  <data name="ImportFile.Text" xml:space="preserve">
    <value>IMPORT FILE</value>
  </data>
  <data name="TakePhoto.Text" xml:space="preserve">
    <value>TAKE A PHOTO</value>
  </data>
  <data name="CameraNotFound" xml:space="preserve">
    <value>Camera not found</value>
  </data>
  <data name="ImageTooLarge" xml:space="preserve">
    <value>Image is too large</value>
  </data>
  <data name="DeckNameColumnHeader.Text" xml:space="preserve">
    <value>Deck name</value>
    <comment>statistics page</comment>
  </data>
  <data name="ResultColumnHeader.Text" xml:space="preserve">
    <value>Result</value>
    <comment>statistics page</comment>
  </data>
  <data name="TestDateColumnHeader.Text" xml:space="preserve">
    <value>Test date</value>
    <comment>statistics page</comment>
  </data>
  <data name="ShowMoreButton.Content" xml:space="preserve">
    <value>Show more...</value>
    <comment>statistics page</comment>
  </data>
  <data name="ShowLessButton.Content" xml:space="preserve">
    <value>Show less..</value>
    <comment>statistics page</comment>
  </data>
  <data name="AddFlashcard" xml:space="preserve">
    <value>Add flashcard</value>
  </data>
  <data name="AddTip.Text" xml:space="preserve">
    <value>Add new tip</value>
  </data>
  <data name="Answer.Text" xml:space="preserve">
    <value>Answer</value>
  </data>
  <data name="CreateNewDeck" xml:space="preserve">
    <value>Create new deck</value>
  </data>
  <data name="DeckName.Text" xml:space="preserve">
    <value>Deck name</value>
  </data>
  <data name="DeleteTip.Text" xml:space="preserve">
    <value>Delete tip</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Save changes</value>
  </data>
  <data name="EditFlashcard" xml:space="preserve">
    <value>Edit flashcard</value>
  </data>
  <data name="FillAllFieldsMessage.Text" xml:space="preserve">
    <value>Not all fields contain correct characters number.</value>
  </data>
  <data name="OperationFailed" xml:space="preserve">
    <value>Operation failed</value>
  </data>
  <data name="QuestionLabel.Text" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="Tips.Text" xml:space="preserve">
    <value>Tips</value>
  </data>
  <data name="ManageDeck.Text" xml:space="preserve">
    <value>Manage deck</value>
  </data>
  <data name="GoToAddDeck.Content" xml:space="preserve">
    <value>Create new deck</value>
  </data>
  <data name="GoToAddFlashcard.Text" xml:space="preserve">
    <value>Add new flashcard</value>
  </data>
  <data name="IsPublic.Content" xml:space="preserve">
    <value>Is deck public?</value>
  </data>
  <data name="FlashcardsInDeck.Text" xml:space="preserve">
    <value>Flashcards in deck</value>
  </data>
  <data name="LogInToAddDeck" xml:space="preserve">
    <value>You have to be logged in to add new deck.</value>
  </data>
  <data name="CreateDeckFromFile.Text" xml:space="preserve">
    <value>Create new deck from file</value>
  </data>
  <data name="CreateDeckWithFlashcard.Text" xml:space="preserve">
    <value>Create new deck with flashcard</value>
  </data>
  <data name="CreatingDeck.Text" xml:space="preserve">
    <value>Creating new deck</value>
  </data>
  <data name="Image.Text" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="LoginMessage" xml:space="preserve">
    <value>Please register to add new decks and flashcards.</value>
  </data>
  <data name="AddFlashcards" xml:space="preserve">
    <value>Add flashcards</value>
  </data>
  <data name="GoToAddFlashcardFromFile.Text" xml:space="preserve">
    <value>Add new flashcards from file</value>
  </data>
  <data name="SearchDecks" xml:space="preserve">
    <value>Search decks...</value>
  </data>
  <data name="DeckNameError" xml:space="preserve">
    <value>Deck name is empty</value>
  </data>
  <data name="ImageError" xml:space="preserve">
    <value>Photo is not selected</value>
  </data>
</root>