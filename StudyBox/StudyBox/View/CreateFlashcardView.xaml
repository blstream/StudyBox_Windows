<Page
    x:Class="StudyBox.View.CreateFlashcardView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:StudyBox.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:converters="using:StudyBox.Converters"
    xmlns:userControls="using:StudyBox.UserControls"
    xmlns:models="using:StudyBox.Core.Models"
    DataContext="{Binding Source={StaticResource Locator}, Path=CreateFlashcardViewModel}">

    <Page.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:NegativeBooleanToVisibilityConverter x:Key="NegativeBooleanToVisibilityConverter" />
        <converters:BoolToBrushConverter x:Key="BoolToBrushConverter" />
        <converters:BoolToExpandArrowSymbol x:Key="BoolToExpandArrowSymbol" />
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" MinHeight="50" />
            <RowDefinition Height="13*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock x:Name="SmallFontManagment" Visibility="Collapsed" Grid.Row="0" Grid.Column="0"/>
        <TextBlock x:Name="StandardFontManagment" Visibility="Collapsed"/>
        <TextBlock x:Name="BigFontManagment" Visibility="Collapsed"/>

        <userControls:MenuControlView Grid.RowSpan="3" Canvas.ZIndex="2"/>
        <SplitView  Grid.Row="1" 
                    Grid.Column="0" 
                    DisplayMode="CompactInline"  
                    HorizontalAlignment="Stretch" 
                    IsPaneOpen="{Binding IsPaneVisible, Mode=TwoWay}"
                    OpenPaneLength="296"
                    CompactPaneLength="60"
                    Name="MainSplitView"
                   >
            <SplitView.Pane>
                <ScrollViewer  VerticalScrollBarVisibility="Hidden" Margin="10,5,5,5">
                    <StackPanel>
                        <Grid Grid.Row="2" Margin="0,24,0,24" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button Background="Transparent" Command="{Binding TogglePaneVisibility}" Grid.Column="0">
                                <SymbolIcon  Symbol="{Binding ElementName=MainSplitView, Path=IsPaneOpen, Converter={StaticResource BoolToExpandArrowSymbol},UpdateSourceTrigger=PropertyChanged}" />
                            </Button>
                            <TextBlock Margin="20,0,0,0" 
                                       VerticalAlignment="Center" 
                                       Grid.Column="1"
                                       x:Uid="FlashcardsInDeck"
                                       FontFamily="{StaticResource LatoRegularFontFamily}"
                                       FontSize="{Binding ElementName=StandardFontManagment, Path=FontSize}"/>
                        </Grid>

                        <ListView Name="Flashcards"  
                          Visibility="{Binding ElementName=MainSplitView, Path=IsPaneOpen, Converter={StaticResource BooleanToVisibilityConverter}}"
                          ItemsSource="{Binding FlashcardsCollection}" 
                          HorizontalAlignment="Stretch" 
                          IsItemClickEnabled="False" 
                          Margin="5,0,5,0"
                          Padding="0">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="0,0,0,10" 
                                                HorizontalAlignment="Stretch"  
                                                Background="{StaticResource Graphite}"
                                                Padding="5">

                                        <TextBlock FontSize="{Binding ElementName=MessageFontManagment, Path=FontSize}" 
                                               FontFamily="{StaticResource LatoRegularFontFamily}"
                                               Foreground="{StaticResource Grey}" 
                                               TextTrimming="CharacterEllipsis"
                                               TextWrapping="NoWrap"
                                               MaxLines="1"
                                               Text="{Binding Question}"/>
                                        <TextBlock FontSize="{Binding ElementName=MessageFontManagment, Path=FontSize}" 
                                               FontFamily="{StaticResource LatoRegularFontFamily}"
                                               Foreground="{StaticResource Grey}" 
                                               TextTrimming="CharacterEllipsis"
                                               TextWrapping="NoWrap"
                                               MaxLines="1"
                                               Text="{Binding Answer}"/>

                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                    </StackPanel>
                </ScrollViewer>
            </SplitView.Pane>
            <SplitView.Content>
                <ScrollViewer Grid.Column="1" Margin="5" 
                      HorizontalAlignment="Stretch"  
                      VerticalScrollBarVisibility="Hidden">

                    <StackPanel Margin="5,5,5,5" Padding="5" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch" >
                        <TextBlock  FontSize="{Binding ElementName=StandardFontManagment, Path=FontSize}" 
                                FontFamily="{StaticResource LatoRegularFontFamily}"
                                HorizontalAlignment="Center" 
                                Text="{Binding HeaderMessage}" />

                        <TextBlock  Margin="0,20,0,5"  
                                FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                                FontFamily="{StaticResource LatoRegularFontFamily}"
                                x:Uid="DeckName" />
                        
                        <TextBox FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"     
                             FontFamily="{StaticResource LatoRegularFontFamily}"
                             TextWrapping="Wrap" 
                             Text="{Binding DeckName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             MaxLength="{Binding MaxDeckNameCharacters, Mode=OneTime}" />

                        <TextBlock FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                                   FontFamily="{StaticResource LatoRegularFontFamily}">
                            <Run Text="{Binding CurrentDeckNameCharactersNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 Foreground="{Binding IsDeckNameValid, Converter={StaticResource BoolToBrushConverter}}">                      
                            </Run>
                            <Run Text="/"/>
                            <Run Text="{Binding MaxDeckNameCharacters}"></Run>
                        </TextBlock>

                        <CheckBox  Margin="0,20,0,5"  
                                   IsChecked="{Binding IsPublic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                   x:Uid="isPublic"
                                   FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                                   FontFamily="{StaticResource LatoRegularFontFamily}"/>


                        <TextBlock  Margin="0,20,0,5" 
                            FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                            FontFamily="{StaticResource LatoRegularFontFamily}"    
                            x:Uid="QuestionLabel"/>
                        <TextBox FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}" 
                         FontFamily="{StaticResource LatoRegularFontFamily}"
                         TextWrapping="Wrap" 
                         AcceptsReturn="True" 
                         Text="{Binding Question, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         MaxLength="{Binding MaxQuestionCharacters, Mode=OneTime}" />

                        <TextBlock FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                             FontFamily="{StaticResource LatoRegularFontFamily}">
                            <Run Text="{Binding CurrentQuestionCharactersNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 Foreground="{Binding IsQuestionValid, Converter={StaticResource BoolToBrushConverter}}">                      
                            </Run>
                            <Run Text="/"/>
                            <Run Text="{Binding MaxQuestionCharacters}"></Run>
                        </TextBlock>

                        <TextBlock Margin="0,20,0,5" 
                           FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                           FontFamily="{StaticResource LatoRegularFontFamily}"
                           x:Uid="Answer"/>
                        <TextBox Name="Answer"
                         FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}" 
                         FontFamily="{StaticResource LatoRegularFontFamily}"
                         TextWrapping="Wrap" 
                         AcceptsReturn="True" 
                         Text="{Binding Answer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         MaxLength="{Binding MaxAnswerCharacters, Mode=OneTime}"/>

                        <TextBlock FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                                   FontFamily="{StaticResource LatoRegularFontFamily}">
                            <Run Text="{Binding CurrentAnswerCharactersNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Foreground="{Binding IsAnswerValid, Converter={StaticResource BoolToBrushConverter}}">                       
                            </Run>
                            <Run Text="/"/>
                            <Run Text="{Binding MaxAnswerCharacters}"></Run>
                        </TextBlock>

                        <TextBlock Margin="0,20,0,5" 
                           FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                           FontFamily="{StaticResource LatoRegularFontFamily}"
                           x:Uid="Tips"/>

                        <ListView Name="Tips"  
                          ItemsSource="{Binding TipsCollection}" 
                          HorizontalAlignment="Stretch" 
                          IsItemClickEnabled="False" 
                          Margin="0"
                          Padding="0">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Padding="0" Margin="0,0,0,5" HorizontalAlignment="Stretch">

                                        <Button Background="Transparent"
                                            Command="{Binding ElementName=Tips, Path=DataContext.Remove}" 
                                            CommandParameter="{Binding ID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            BorderThickness="0">
                                            <TextBlock TextWrapping="Wrap"
                                                   x:Uid="DeleteTip"  
                                                   TextAlignment="DetectFromContent"   
                                                   HorizontalAlignment="Stretch"
                                                   FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                                                   FontFamily="{StaticResource LatoRegularFontFamily}"
                                                   Foreground="{StaticResource Graphite}"
                                                   Padding="0,0"/>
                                        </Button>

                                        <TextBox  Name="Content"
                                              HorizontalAlignment="Stretch"
                                              FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                                              FontFamily="{StaticResource LatoRegularFontFamily}"
                                              MaxLength="{Binding MaxEssenceCharacters, Mode=OneTime}"
                                              TextWrapping="Wrap" AcceptsReturn="True"
                                              Text="{Binding Essence, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                        <TextBlock FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                                               FontFamily="{StaticResource LatoRegularFontFamily}">
                                    <Run Text="{Binding CurrentEssenceCharactersNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         Foreground="{Binding IsEssenceValid, Converter={StaticResource BoolToBrushConverter}}">                                      
                                    </Run>
                                    <Run Text="/"/>
                                    <Run Text="{Binding MaxEssenceCharacters, Mode=OneTime}"></Run>
                                        </TextBlock>

                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                        <Button
                            Background="{StaticResource DarkBlue}" 
                            Command="{Binding AddTip}">
                            <TextBlock TextWrapping="Wrap"
                                   x:Uid="AddTip"
                                   FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                                   FontFamily="{StaticResource LatoRegularFontFamily}"
                                   Foreground="{StaticResource Grey}" 
                                   Padding="0,5" />
                        </Button>

                        <TextBlock x:Name="GeneralError"  
                                   Visibility="{Binding IsGeneralError, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Foreground="{StaticResource Raspberry}" 
                                   FontSize="{Binding ElementName=MessageFontManagment, Path=FontSize}" 
                                   FontFamily="{StaticResource LatoRegularFontFamily}"
                                   TextAlignment="Center"                                    
                                   x:Uid="FillAllFieldsMessage"
                                   Margin="10,15,0,10" >
                        </TextBlock>

                        <Grid Margin="0,25,0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0"
                                HorizontalAlignment="Stretch"                                                          
                                Background="{StaticResource Raspberry}" 
                                Command="{Binding Cancel}">
                                <TextBlock TextWrapping="Wrap"
                                       x:Uid="Cancel"
                                       FontSize="{Binding ElementName=StandardFontManagment, Path=FontSize}"
                                       FontFamily="{StaticResource LatoRegularFontFamily}"
                                       Foreground="{StaticResource Grey}" 
                                       Padding="0,5"/>
                            </Button>

                            <Button Grid.Column="2"
                                HorizontalAlignment="Stretch"
                                Name="SubmitForm"                                
                                Background="{StaticResource DarkBlue}" 
                                Command="{Binding SubmitForm}">
                                <TextBlock TextWrapping="Wrap"
                                       Text="{Binding SubmitFormMessage, Mode=OneWay}"
                                       FontSize="{Binding ElementName=StandardFontManagment, Path=FontSize}"
                                       FontFamily="{StaticResource LatoRegularFontFamily}"
                                       Foreground="{StaticResource Grey}" 
                                       Padding="0,5"/>
                            </Button>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
            </SplitView.Content>
        </SplitView>
        <ProgressRing x:Name="InitializeProgressRing"
                      Grid.Column="0" Grid.Row="0" Grid.RowSpan="3"
                      Width="80"
                      Height="80"
                      Visibility="{Binding IsDataLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      IsActive="{Binding IsDataLoading}"
                      Foreground="{StaticResource DarkBlue}"
                      FontWeight="Bold"/>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="Phone">
                <VisualState x:Name="NarrowPhoneState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SmallFontManagment.FontSize" Value="11"/>
                        <Setter Target="StandardFontManagment.FontSize" Value="16"/>
                        <Setter Target="BigFontManagment.FontSize" Value="24"/>
                        <Setter Target="MainSplitView.OpenPaneLength" Value="300"/>
                        <Setter Target="MainSplitView.DisplayMode" Value="CompactOverlay"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="WidePhoneState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="450"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SmallFontManagment.FontSize" Value="14"/>
                        <Setter Target="StandardFontManagment.FontSize" Value="18"/>
                        <Setter Target="BigFontManagment.FontSize" Value="26"/>
                        <Setter Target="MainSplitView.OpenPaneLength" Value="430"/>
                        <Setter Target="MainSplitView.DisplayMode" Value="CompactOverlay"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="WideTabletState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SmallFontManagment.FontSize" Value="18"/>
                        <Setter Target="StandardFontManagment.FontSize" Value="25"/>
                        <Setter Target="BigFontManagment.FontSize" Value="35"/>
                        <Setter Target="MainSplitView.OpenPaneLength" Value="250"/>
                        <Setter Target="MainSplitView.DisplayMode" Value="CompactInline"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1024"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SmallFontManagment.FontSize" Value="16"/>
                        <Setter Target="StandardFontManagment.FontSize" Value="25"/>
                        <Setter Target="BigFontManagment.FontSize" Value="35"/>
                        <Setter Target="MainSplitView.OpenPaneLength" Value="350"/>
                        <Setter Target="MainSplitView.DisplayMode" Value="CompactInline"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

        </VisualStateManager.VisualStateGroups>
        


    </Grid>
</Page>