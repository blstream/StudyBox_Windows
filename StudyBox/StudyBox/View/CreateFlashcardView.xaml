<Page
    x:Class="StudyBox.View.CreateFlashcardView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:StudyBox.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:converters="using:StudyBox.Converters"
    xmlns:userControls="using:StudyBox.UserControls"
    xmlns:models="using:StudyBox.Core.Models"
    DataContext="{Binding Source={StaticResource Locator}, Path=CreateFlashcardViewModel}">

    <Page.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:NegativeBooleanToVisibilityConverter x:Key="NegativeBooleanToVisibilityConverter" />
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*" MinHeight="50" />
            <RowDefinition Height="13*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock x:Name="SmallFontManagment" Visibility="Collapsed" Grid.Row="0" Grid.Column="0"/>
        <TextBlock x:Name="StandardFontManagment" Visibility="Collapsed"/>
        <TextBlock x:Name="BigFontManagment" Visibility="Collapsed"/>

        <userControls:MenuControlView Grid.RowSpan="3" Canvas.ZIndex="2"/>

        <ScrollViewer Grid.Row="1" Grid.Column="0" Margin="5" 
                      HorizontalAlignment="Stretch"  
                      VerticalScrollBarVisibility="Hidden" >

            <StackPanel Margin="5,5,5,5" Padding="5" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch" >
                <TextBlock  FontSize="{Binding ElementName=StandardFontManagment, Path=FontSize}" 
                            HorizontalAlignment="Center" 
                            Text="{Binding HeaderMessage}" />

                <StackPanel  Visibility="{Binding ShowDeckName, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock  Margin="0,20,0,5"  
                                FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                                x:Uid="DeckName" />
                    <TextBox FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}" 
                             TextWrapping="Wrap" 
                             Text="{Binding DeckName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             MaxLength="{Binding MaxDeckNameCharacters, Mode=OneTime}" />
                    <CheckBox IsChecked="{Binding IsPublic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Uid="isPublic"/>
                    <TextBlock FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}">
                    <Run Text="{Binding CurrentDeckNameCharactersNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></Run>
                    <Run Text="/"/>
                    <Run Text="{Binding MaxDeckNameCharacters}"></Run>
                    </TextBlock>

                </StackPanel>

                <TextBlock  Margin="0,20,0,5" 
                            FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                            x:Uid="QuestionLabel"/>
                <TextBox FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}" 
                         Height="250" 
                         TextWrapping="Wrap" 
                         AcceptsReturn="True" 
                         Text="{Binding Question, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         MaxLength="{Binding MaxQuestionCharacters, Mode=OneTime}" />

                <TextBlock FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}">
                    <Run Text="{Binding CurrentQuestionCharactersNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></Run>
                    <Run Text="/"/>
                    <Run Text="{Binding MaxQuestionCharacters}"></Run>
                </TextBlock>

                <TextBlock Margin="0,20,0,5" 
                           FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                           x:Uid="Answer"/>
                <TextBox Name="Answer"
                         FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}" 
                         Height="250" 
                         TextWrapping="Wrap" 
                         AcceptsReturn="True" 
                         Text="{Binding Answer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         MaxLength="{Binding MaxAnswerCharacters, Mode=OneTime}"/>

                <TextBlock FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}">
                    <Run Text="{Binding CurrentAnswerCharactersNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></Run>
                    <Run Text="/"/>
                    <Run Text="{Binding MaxAnswerCharacters}"></Run>
                </TextBlock>

                <TextBlock Margin="0,20,0,5" 
                           FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                            x:Uid="Tips"/>

                <ListView Name="Tips"  
                          ItemsSource="{Binding TipsCollection}" 
                          HorizontalAlignment="Stretch" 
                          IsItemClickEnabled="False" 
                          Margin="0"
                          Padding="0">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Padding="0" Margin="0" HorizontalAlignment="Stretch">
                                
                                <Button Background="Transparent"                                        
                                    Command="{Binding ElementName=Tips, Path=DataContext.Remove}" 
                                    CommandParameter="{Binding ID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    BorderThickness="0">
                                    <TextBlock TextWrapping="Wrap"                                       
                                       x:Uid="DeleteTip"  
                                       TextAlignment="DetectFromContent"   
                                       HorizontalAlignment="Stretch"
                                       FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                                       FontFamily="{StaticResource LatoRegularFontFamily}"
                                       Foreground="{StaticResource Graphite}"
                                       Padding="0,0"
                                       />
                                </Button>

                                <TextBox  Height="200" Name="Content"      
                                         
                                          HorizontalAlignment="Stretch"
                                          FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                                          MaxLength="{Binding MaxPromptCharacters, Mode=OneTime}"
                                          TextWrapping="Wrap" AcceptsReturn="True"
                                          Text="{Binding Prompt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                <TextBlock FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}">
                                    <Run Text="{Binding CurrentPromptCharactersNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></Run>
                                    <Run Text="/"/>
                                    <Run Text="{Binding MaxPromptCharacters, Mode=OneTime}"></Run>
                                </TextBlock>

                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
              
                <Button  Margin="0,20,0,5"
                                Background="{StaticResource DarkBlue}" 
                                Command="{Binding AddTip}">
                    <TextBlock TextWrapping="Wrap"
                                       x:Uid="AddTip"
                                       FontSize="{Binding ElementName=SmallFontManagment, Path=FontSize}"
                                       FontFamily="{StaticResource LatoRegularFontFamily}"
                                       Foreground="{StaticResource Grey}" 
                                       Padding="0,5"
                                       />
                </Button>

                <TextBlock x:Name="GeneralError"  
                                   Foreground="{StaticResource Raspberry}" 
                                   FontSize="{Binding ElementName=MessageFontManagment, Path=FontSize}" 
                                   TextAlignment="Center"  
                                   Style="{StaticResource ValidationErrorStyle}" 
                                   x:Uid="FillAllFieldsMessage"
                                   Margin="10,15,0,10" >
                            <i:Interaction.Behaviors>
                                <core:DataTriggerBehavior Binding="{Binding Path=IsGeneralError}" Value="True">
                                    <core:GoToStateAction StateName="GeneralErrorState"/>
                                </core:DataTriggerBehavior>
                        
                                 <core:DataTriggerBehavior Binding="{Binding Path=IsGeneralError}" Value="False">
                                    <core:GoToStateAction StateName="NoGeneralErrorState"/>
                                </core:DataTriggerBehavior>
                            </i:Interaction.Behaviors>
                </TextBlock>

                <Button HorizontalAlignment="Stretch"
                        Name="SubmitForm"
                                Margin="0,20,0,5"
                                Background="{StaticResource DarkBlue}" 
                                Command="{Binding SubmitForm}">
                    <TextBlock TextWrapping="Wrap"
                                       Text="{Binding SubmitFormMessage, Mode=OneWay}"
                                       FontSize="{Binding ElementName=StandardFontManagment, Path=FontSize}"
                                       FontFamily="{StaticResource LatoRegularFontFamily}"
                                       Foreground="{StaticResource Grey}" 
                                       Padding="0,5"
                                       />
                </Button>
            </StackPanel>
        </ScrollViewer>

        <ProgressRing x:Name="InitializeProgressRing"
                      Grid.Column="0" Grid.Row="0" Grid.RowSpan="3"
                      Width="80"
                      Height="80"
                      Visibility="{Binding IsDataLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      IsActive="{Binding IsDataLoading}"
                      Foreground="{StaticResource DarkBlue}"
                      FontWeight="Bold"
                      />

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="Phone">
                <VisualState x:Name="NarrowPhoneState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SmallFontManagment.FontSize" Value="11"/>
                        <Setter Target="StandardFontManagment.FontSize" Value="16"/>
                        <Setter Target="BigFontManagment.FontSize" Value="24"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="WidePhoneState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="450"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SmallFontManagment.FontSize" Value="14"/>
                        <Setter Target="StandardFontManagment.FontSize" Value="18"/>
                        <Setter Target="BigFontManagment.FontSize" Value="26"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="WideTabletState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SmallFontManagment.FontSize" Value="18"/>
                        <Setter Target="StandardFontManagment.FontSize" Value="25"/>
                        <Setter Target="BigFontManagment.FontSize" Value="35"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1024"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SmallFontManagment.FontSize" Value="16"/>
                        <Setter Target="StandardFontManagment.FontSize" Value="25"/>
                        <Setter Target="BigFontManagment.FontSize" Value="35"/>
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>

            <VisualStateGroup x:Name="GeneralErrorStates">
                <VisualState x:Name="GeneralErrorState">
                    <Storyboard>
                        <DoubleAnimation
                                    Storyboard.TargetName="GeneralError"
                                    Storyboard.TargetProperty="Opacity"
                                    From="0.0" To="1.0" Duration="0:0:0.5" />
                    </Storyboard>
                    <VisualState.Setters>
                        <Setter Target="GeneralError.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="NoGeneralErrorState">
                    <VisualState.Setters>
                        <Setter Target="GeneralError.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</Page>